{
    // Indicates the root of the configuration file
    "root": true,
    // Specifies the parser to be used for TypeScript files
    "parser": "@typescript-eslint/parser",
    // Specifies the ESLint plugins to be used
    "plugins": [
        "@typescript-eslint"
    ],
    // Extends the recommended ESLint configurations for TypeScript
    "extends": [
        "eslint:recommended",
        "plugin:@typescript-eslint/eslint-recommended",
        "plugin:@typescript-eslint/recommended"
    ],
    // Configures the specific rules to be used
    "rules": {
        // Enforces naming conventions for variables, functions, and parameters
        "@typescript-eslint/naming-convention": [
            "error",
            {
                "selector": "default",
                "format": [
                    "camelCase"
                ]
            },
            {
                "selector": "variableLike",
                "format": [
                    "camelCase",
                    "PascalCase",
                    "UPPER_CASE"
                ]
            },
            {
                "selector": "function",
                "format": [
                    "camelCase",
                    "PascalCase"
                ]
            },
            {
                "selector": "parameter",
                "format": [
                    "camelCase"
                ],
                "leadingUnderscore": "allow"
            }
        ],
        // Flags unused variables
        "no-unused-vars": "error",
        // Enforces a maximum line length
        "max-len": [
            "error",
            {
                "code": 80,
                "ignoreUrls": true
            }
        ],
        // Enforces brace style for blocks
        "brace-style": [
            "error",
            "1tbs",
            {
                "allowSingleLine": false
            }
        ],
        // Enforces a newline at the end of files
        "eol-last": [
            "error",
            "unix"
        ],
        // Enforces a specific indentation style
        "indent": [
            "error",
            4
        ],
        // Limits the number of consecutive empty lines
        "no-multiple-empty-lines": [
            "error",
            {
                "max": 1,
                "maxEOF": 0,
                "maxBOF": 0
            }
        ],
        // Enforces specific padding lines between statements
        "padding-line-between-statements": [
            "error",
            {
                "blankLine": "always",
                "prev": "class",
                "next": "*"
                // "content": "2"
            },
            {
                "blankLine": "always",
                "prev": "function",
                "next": ["function", "if", "switch"]
            },
            {
                "blankLine": "always",
                "prev": ["if", "switch"],
                "next": "function"
            }
        ],
        // Enforces the use of semicolons
        "semi": [
            "error",
            "always"
        ]
    }
}
